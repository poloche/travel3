// Note: "common.gradle" in the root project contains additional initialization
//   for this project. This initialization is applied in the "build.gradle"
//   of the root project.

// NetBeans will automatically add "run" and "debug" tasks relying on the
// "mainClass" property. You may however define the property prior executing
// tasks by passing a "-PmainClass=<QUALIFIED_CLASS_NAME>" argument.
//
// Note however, that you may define your own "run" and "debug" task if you
// prefer. In this case NetBeans will not add these tasks but you may rely on
// your own implementation.
//if (!hasProperty('mainClass')) {
//    ext.mainClass = 'org.plc.travel.UIMain'
//}
//
//dependencies {
//    // TODO: Add dependencies here
//    //   but note that JUnit should have already been added in parent.gradle.
//    //   By default, only the Maven Central Repository is specified in
//    //   parent.gradle.
//    //
//    // You can read more about how to add dependency here:
//    //   http://www.gradle.org/docs/current/userguide/dependency_management.html#sec:how_to_declare_your_dependencies
//}


// Declares binary plugin and its required JavaFX classpath
apply from: "javafx.plugin"

// Configures plugin
javafx {
    // Points to JDK and its JavaFX libraries, also declares target runtime JDK
    //javaRuntime = '/Library/Java/JavaVirtualMachines/jdk1.7.0_40.jdk'
    
    // Application name and ID presented by target OS
    appID 'travelUI'
    appName 'TravelUI'
    
    // Main class of application
    mainClass 'org.plc.travel.UIMain'
    
    // JVM arguments, system properties, application command line arguments
    jvmArgs = ['-XX:+AggressiveOpts', '-XX:CompileThreshold=1']
    systemProperties = ['prism.disableRegionCaching':'true']
    arguments = ['-l', '--fast']

    // Keystore credentials for signing JAR
    // Generate key: keytool -genkey -alias release -keyalg RSA -keystore keystore.jks -keysize 2048
    releaseKey {
        alias = 'release'
        keyPass = getProjectProperty('keyStorePassword')
        keyStore = file("${System.properties['user.home']}/keystore/keystore.jks")
        storePass = getProjectProperty('storePassword')
    }
    
    signingMode 'release'
    
    // ...
}

String getProjectProperty(String propertyName) {
    project.hasProperty(propertyName) ? project.property(propertyName) : null
}